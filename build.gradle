group 'com.email.base'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '1.3.5.RELEASE'
        kotlinVersion = '1.0.0'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'spring-boot'
apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:1.0.0-release-IJ143-78"
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile ("org.postgresql:postgresql:9.4-1200-jdbc41") {
        exclude group: "org.slf4j"
    }
    //compile("org.jetbrains.kotlinx:kotlinx-support-jdk8:0.1") //Streams support.
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

task initSourceFolders { // add << before { to prevent executing during configuration phase
    sourceSets*.kotlin.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

springBoot {
    mainClass = 'com.brenosiqueira.base.email.Application'
}

bootRepackage {
    mainClass = 'com.brenosiqueira.base.email.Application'
}
